/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Greeter, GreeterInterface } from "../Greeter";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000eec38038062000eec8339818101604052810190620000379190620004aa565b6200006b7ffc8cd15681023f4924c2ccba2948b9b395be40c1a7b0474fb683fb82f51bb72160001b6200018b60201b60201c565b6200009f7f5544189c99e1ec0ec3757e0be65f795aa34a8f73cc4afb5df6a612ee36ba011160001b6200018b60201b60201c565b620000d37f9a1ea9fb73ee94f1659d760437aec238ba799d63443f5bd28fda8daabf8065bb60001b6200018b60201b60201c565b6200010360405180606001604052806022815260200162000eca60229139826200018e60201b6200032e1760201c565b620001377f03f322ee7008bdf5b14876ee85e4f3fd3132a794208375990184dcba16b348cd60001b6200018b60201b60201c565b6200016b7f8ad2cc0a7d7a3e6ec9314ae21647f7750f80a8166284eda5af0549ceff1f78f660001b6200018b60201b60201c565b8060009080519060200190620001839291906200025d565b5050620005f8565b50565b620002308282604051602401620001a792919062000558565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200023460201b60201c565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b8280546200026b90620005c2565b90600052602060002090601f0160209004810192826200028f5760008555620002db565b82601f10620002aa57805160ff1916838001178555620002db565b82800160010185558215620002db579182015b82811115620002da578251825591602001919060010190620002bd565b5b509050620002ea9190620002ee565b5090565b5b8082111562000309576000816000905550600101620002ef565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000376826200032b565b810181811067ffffffffffffffff821117156200039857620003976200033c565b5b80604052505050565b6000620003ad6200030d565b9050620003bb82826200036b565b919050565b600067ffffffffffffffff821115620003de57620003dd6200033c565b5b620003e9826200032b565b9050602081019050919050565b60005b8381101562000416578082015181840152602081019050620003f9565b8381111562000426576000848401525b50505050565b6000620004436200043d84620003c0565b620003a1565b90508281526020810184848401111562000462576200046162000326565b5b6200046f848285620003f6565b509392505050565b600082601f8301126200048f576200048e62000321565b5b8151620004a18482602086016200042c565b91505092915050565b600060208284031215620004c357620004c262000317565b5b600082015167ffffffffffffffff811115620004e457620004e36200031c565b5b620004f28482850162000477565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60006200052482620004fb565b62000530818562000506565b935062000542818560208601620003f6565b6200054d816200032b565b840191505092915050565b6000604082019050818103600083015262000574818562000517565b905081810360208301526200058a818462000517565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620005db57607f821691505b60208210811415620005f257620005f162000593565b5b50919050565b6108c280620006086000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063a41368621461003b578063cfae321714610057575b600080fd5b61005560048036038101906100509190610692565b610075565b005b61005f610218565b60405161006c9190610763565b60405180910390f35b6100a17f0961950444d3af5d9163f3698b2d9c35f384dd5eb7a56f224d610348cad110de60001b6103ca565b6100cd7f22648fd387a7e3c46c49034164e7e20d082e9bf1aa4043ec7439e862d5014b3b60001b6103ca565b6100f97f7fa31c9c66a386b669b326b887762eb1cb1a61e92470e4d75b96fe84032e308b60001b6103ca565b6101a660405180606001604052806023815260200161086a6023913960008054610122906107b4565b80601f016020809104026020016040519081016040528092919081815260200182805461014e906107b4565b801561019b5780601f106101705761010080835404028352916020019161019b565b820191906000526020600020905b81548152906001019060200180831161017e57829003601f168201915b5050505050836103cd565b6101d27f3d2daae169a2dd781ba71ddfd78c4705912823e70ae260d63f6750e27cd6457660001b6103ca565b6101fe7fc253ea134a2cceb0c44f713aa0880ef7a68328ece87b46be2c683bd8d17939db60001b6103ca565b8060009080519060200190610214929190610495565b5050565b60606102467fde25c08e05ba3aa5a95e033a46eac146c3863f850e2f7f4c85005f539723db6960001b6103ca565b6102727f10b01940e153f655fd1e3ebb500771cab8f225b33677dd20921f59b7d500bb9360001b6103ca565b61029e7f815c067e6feca4ca32435a7e22155c2377e8bb1b51f6ec9e84570beff9f81a9660001b6103ca565b600080546102ab906107b4565b80601f01602080910402602001604051908101604052809291908181526020018280546102d7906107b4565b80156103245780601f106102f957610100808354040283529160200191610324565b820191906000526020600020905b81548152906001019060200180831161030757829003601f168201915b5050505050905090565b6103c682826040516024016103449291906107e6565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061046c565b5050565b50565b6104678383836040516024016103e59392919061081d565b6040516020818303038152906040527f2ced7cef000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061046c565b505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b8280546104a1906107b4565b90600052602060002090601f0160209004810192826104c3576000855561050a565b82601f106104dc57805160ff191683800117855561050a565b8280016001018555821561050a579182015b828111156105095782518255916020019190600101906104ee565b5b509050610517919061051b565b5090565b5b8082111561053457600081600090555060010161051c565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61059f82610556565b810181811067ffffffffffffffff821117156105be576105bd610567565b5b80604052505050565b60006105d1610538565b90506105dd8282610596565b919050565b600067ffffffffffffffff8211156105fd576105fc610567565b5b61060682610556565b9050602081019050919050565b82818337600083830152505050565b6000610635610630846105e2565b6105c7565b90508281526020810184848401111561065157610650610551565b5b61065c848285610613565b509392505050565b600082601f8301126106795761067861054c565b5b8135610689848260208601610622565b91505092915050565b6000602082840312156106a8576106a7610542565b5b600082013567ffffffffffffffff8111156106c6576106c5610547565b5b6106d284828501610664565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156107155780820151818401526020810190506106fa565b83811115610724576000848401525b50505050565b6000610735826106db565b61073f81856106e6565b935061074f8185602086016106f7565b61075881610556565b840191505092915050565b6000602082019050818103600083015261077d818461072a565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806107cc57607f821691505b602082108114156107e0576107df610785565b5b50919050565b60006040820190508181036000830152610800818561072a565b90508181036020830152610814818461072a565b90509392505050565b60006060820190508181036000830152610837818661072a565b9050818103602083015261084b818561072a565b9050818103604083015261085f818461072a565b905094935050505056fe4368616e67696e67206772656574696e672066726f6d202725732720746f2027257327a2646970667358221220271971cbd9ce6d0e901ba75c853f1ed1ef4b561cb1424790ed663b03502b7ecd64736f6c634300080b00334465706c6f79696e67206120477265657465722077697468206772656574696e673a";

export class Greeter__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _greeting: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Greeter> {
    return super.deploy(_greeting, overrides || {}) as Promise<Greeter>;
  }
  getDeployTransaction(
    _greeting: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_greeting, overrides || {});
  }
  attach(address: string): Greeter {
    return super.attach(address) as Greeter;
  }
  connect(signer: Signer): Greeter__factory {
    return super.connect(signer) as Greeter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreeterInterface {
    return new utils.Interface(_abi) as GreeterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Greeter {
    return new Contract(address, _abi, signerOrProvider) as Greeter;
  }
}
