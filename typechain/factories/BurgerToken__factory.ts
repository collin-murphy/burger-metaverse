/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BurgerToken, BurgerTokenInterface } from "../BurgerToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001e3838038062001e3883398181016040528101906200003791906200069f565b828281600390805190602001906200005192919062000417565b5080600490805190602001906200006a92919062000417565b5050506200007f3382620000dd60201b60201c565b620000ae60405180606001604052806034815260200162001e04603491396200025660201b620006851760201c565b620000d4620000c333620002f960201b60201c565b6200034160201b6200071e1760201c565b5050506200094b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000150576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000147906200079a565b60405180910390fd5b6200016460008383620003e460201b60201c565b8060026000828254620001789190620007eb565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620001cf9190620007eb565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000236919062000859565b60405180910390a36200025260008383620003e960201b60201c565b5050565b620002f6816040516024016200026d9190620008c2565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050620003ee60201b60201c565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b620003e18160405160240162000358919062000859565b6040516020818303038152906040527ff5b1bba9000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050620003ee60201b60201c565b50565b505050565b505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b828054620004259062000915565b90600052602060002090601f01602090048101928262000449576000855562000495565b82601f106200046457805160ff191683800117855562000495565b8280016001018555821562000495579182015b828111156200049457825182559160200191906001019062000477565b5b509050620004a49190620004a8565b5090565b5b80821115620004c3576000816000905550600101620004a9565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200053082620004e5565b810181811067ffffffffffffffff82111715620005525762000551620004f6565b5b80604052505050565b600062000567620004c7565b905062000575828262000525565b919050565b600067ffffffffffffffff821115620005985762000597620004f6565b5b620005a382620004e5565b9050602081019050919050565b60005b83811015620005d0578082015181840152602081019050620005b3565b83811115620005e0576000848401525b50505050565b6000620005fd620005f7846200057a565b6200055b565b9050828152602081018484840111156200061c576200061b620004e0565b5b62000629848285620005b0565b509392505050565b600082601f830112620006495762000648620004db565b5b81516200065b848260208601620005e6565b91505092915050565b6000819050919050565b620006798162000664565b81146200068557600080fd5b50565b60008151905062000699816200066e565b92915050565b600080600060608486031215620006bb57620006ba620004d1565b5b600084015167ffffffffffffffff811115620006dc57620006db620004d6565b5b620006ea8682870162000631565b935050602084015167ffffffffffffffff8111156200070e576200070d620004d6565b5b6200071c8682870162000631565b92505060406200072f8682870162000688565b9150509250925092565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600062000782601f8362000739565b91506200078f826200074a565b602082019050919050565b60006020820190508181036000830152620007b58162000773565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620007f88262000664565b9150620008058362000664565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200083d576200083c620007bc565b5b828201905092915050565b620008538162000664565b82525050565b600060208201905062000870600083018462000848565b92915050565b600081519050919050565b60006200088e8262000876565b6200089a818562000739565b9350620008ac818560208601620005b0565b620008b781620004e5565b840191505092915050565b60006020820190508181036000830152620008de818462000881565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200092e57607f821691505b60208210811415620009455762000944620008e6565b5b50919050565b6114a9806200095b6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610d63565b60405180910390f35b6100e660048036038101906100e19190610e1e565b610308565b6040516100f39190610e79565b60405180910390f35b61010461032b565b6040516101119190610ea3565b60405180910390f35b610134600480360381019061012f9190610ebe565b610335565b6040516101419190610e79565b60405180910390f35b610152610364565b60405161015f9190610f2d565b60405180910390f35b610182600480360381019061017d9190610e1e565b61036d565b60405161018f9190610e79565b60405180910390f35b6101b260048036038101906101ad9190610f48565b610417565b6040516101bf9190610ea3565b60405180910390f35b6101d061045f565b6040516101dd9190610d63565b60405180910390f35b61020060048036038101906101fb9190610e1e565b6104f1565b60405161020d9190610e79565b60405180910390f35b610230600480360381019061022b9190610e1e565b6105db565b60405161023d9190610e79565b60405180910390f35b610260600480360381019061025b9190610f75565b6105fe565b60405161026d9190610ea3565b60405180910390f35b60606003805461028590610fe4565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610fe4565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b6000806103136107b7565b90506103208185856107bf565b600191505092915050565b6000600254905090565b6000806103406107b7565b905061034d85828561098a565b610358858585610a16565b60019150509392505050565b60006012905090565b6000806103786107b7565b905061040c818585600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104079190611045565b6107bf565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461046e90610fe4565b80601f016020809104026020016040519081016040528092919081815260200182805461049a90610fe4565b80156104e75780601f106104bc576101008083540402835291602001916104e7565b820191906000526020600020905b8154815290600101906020018083116104ca57829003601f168201915b5050505050905090565b6000806104fc6107b7565b90506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050838110156105c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b99061110d565b60405180910390fd5b6105cf82868684036107bf565b60019250505092915050565b6000806105e66107b7565b90506105f3818585610a16565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61071b816040516024016106999190610d63565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610c97565b50565b6107b4816040516024016107329190610ea3565b6040516020818303038152906040527ff5b1bba9000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610c97565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561082f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108269061119f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561089f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089690611231565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161097d9190610ea3565b60405180910390a3505050565b600061099684846105fe565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a105781811015610a02576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f99061129d565b60405180910390fd5b610a0f84848484036107bf565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7d9061132f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610af6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aed906113c1565b60405180910390fd5b610b01838383610cc0565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610b87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7e90611453565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c1a9190611045565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c7e9190610ea3565b60405180910390a3610c91848484610cc5565b50505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d04578082015181840152602081019050610ce9565b83811115610d13576000848401525b50505050565b6000601f19601f8301169050919050565b6000610d3582610cca565b610d3f8185610cd5565b9350610d4f818560208601610ce6565b610d5881610d19565b840191505092915050565b60006020820190508181036000830152610d7d8184610d2a565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610db582610d8a565b9050919050565b610dc581610daa565b8114610dd057600080fd5b50565b600081359050610de281610dbc565b92915050565b6000819050919050565b610dfb81610de8565b8114610e0657600080fd5b50565b600081359050610e1881610df2565b92915050565b60008060408385031215610e3557610e34610d85565b5b6000610e4385828601610dd3565b9250506020610e5485828601610e09565b9150509250929050565b60008115159050919050565b610e7381610e5e565b82525050565b6000602082019050610e8e6000830184610e6a565b92915050565b610e9d81610de8565b82525050565b6000602082019050610eb86000830184610e94565b92915050565b600080600060608486031215610ed757610ed6610d85565b5b6000610ee586828701610dd3565b9350506020610ef686828701610dd3565b9250506040610f0786828701610e09565b9150509250925092565b600060ff82169050919050565b610f2781610f11565b82525050565b6000602082019050610f426000830184610f1e565b92915050565b600060208284031215610f5e57610f5d610d85565b5b6000610f6c84828501610dd3565b91505092915050565b60008060408385031215610f8c57610f8b610d85565b5b6000610f9a85828601610dd3565b9250506020610fab85828601610dd3565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610ffc57607f821691505b602082108114156110105761100f610fb5565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061105082610de8565b915061105b83610de8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156110905761108f611016565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006110f7602583610cd5565b91506111028261109b565b604082019050919050565b60006020820190508181036000830152611126816110ea565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611189602483610cd5565b91506111948261112d565b604082019050919050565b600060208201905081810360008301526111b88161117c565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061121b602283610cd5565b9150611226826111bf565b604082019050919050565b6000602082019050818103600083015261124a8161120e565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611287601d83610cd5565b915061129282611251565b602082019050919050565b600060208201905081810360008301526112b68161127a565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611319602583610cd5565b9150611324826112bd565b604082019050919050565b600060208201905081810360008301526113488161130c565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006113ab602383610cd5565b91506113b68261134f565b604082019050919050565b600060208201905081810360008301526113da8161139e565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b600061143d602683610cd5565b9150611448826113e1565b604082019050919050565b6000602082019050818103600083015261146c81611430565b905091905056fea2646970667358221220962e71823ab98f1bdb52b62ca1a76ccd073fdd75765260bec7a551773267844264736f6c634300080b0033636f6e7472616374206465706c6f7965642c2074686973206d616e7920746f6b656e732073656e7420746f206465706c6f796572";

export class BurgerToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    name: string,
    symbol: string,
    initialSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BurgerToken> {
    return super.deploy(
      name,
      symbol,
      initialSupply,
      overrides || {}
    ) as Promise<BurgerToken>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    initialSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      initialSupply,
      overrides || {}
    );
  }
  attach(address: string): BurgerToken {
    return super.attach(address) as BurgerToken;
  }
  connect(signer: Signer): BurgerToken__factory {
    return super.connect(signer) as BurgerToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BurgerTokenInterface {
    return new utils.Interface(_abi) as BurgerTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BurgerToken {
    return new Contract(address, _abi, signerOrProvider) as BurgerToken;
  }
}
